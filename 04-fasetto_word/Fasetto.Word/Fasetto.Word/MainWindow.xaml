<Window x:Class="Fasetto.Word.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
         xmlns:MetroChart="clr-namespace:De.TorstenMandelkow.MetroChart;assembly=De.TorstenMandelkow.MetroChart"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Fasetto.Word"
        mc:Ignorable="d"
        WindowStyle="None"
        AllowsTransparency="True"
        WindowStartupLocation="CenterScreen"
        x:Name="AppWindow"
        Icon="Images/Logo/logo-small.png"
        MinWidth="{Binding WindowMinimumWidth}"
        MinHeight="{Binding WindowMinimumHeight}"
        Title="Welcome, friend!" Height="600" Width="900">
        <!--WindowStyle=none 으로 상단 바와 외곽선 등을 없애고 AllowsTransparency로 코너를 디자인할 수 있게 한다.
        윈도우에 access하기 위한 이름을 AppWindow로 만든다.-->
    
        <!--정상 출력 확인용 <TextBlock Text="{Binding Test}"/>-->

    <Window.Resources>
        <Style TargetType="{x:Type local:MainWindow}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <!--ControlTemplate은 그냥 Window형태로 만들겠다는 Template을 설정한 것 뿐이므로
                        안에 내용이 없으면 아무것도 뜨지 않는다. 아래에 컬러 설정을 해놨더라도 이미 이것으로 덮어쓰워져 나오지 않는다.-->
                        
                        <!--Outer border with the dropshadow margin-->
                        <!--OuterMarginSizeThinkness값을 못 찾았을 경우 FallbackValue로 대신한다-->
                        <!--이 부분이 OuterMargin이 포함된 원래 사이즈-->
                        <Border Padding="{Binding OuterMarginSizeThinkness, FallbackValue=10}">
                            
                            <!--Main window outline-->
                            <Grid>
                                
                                <!--Opacity mask for corners on grid-->
                                <Border x:Name="Container"
                                        Background="{StaticResource BackgroundLightBrush}"
                                        CornerRadius="{Binding WindowCornerRadius, FallbackValue=10}"/>

                                <!--Window border and dropshadow-->
                                <Border CornerRadius="{Binding WindowCornerRadius, FallbackValue=10}"
                                        Background="{Binding ForegroundLightBrush, FallbackValue=White}">
                                    <Border.Effect>
                                        <!--depth는 센터를 기준으로 값을 기입하며, 0.2는 20%를 의미한다.-->
                                        <DropShadowEffect ShadowDepth="0" Opacity="0.2"/>
                                    </Border.Effect>
                                </Border>
                                <!--The main window content-->
                                <Grid>
                                    
                                    <!--Corner clipping-->
                                    <Grid.OpacityMask>
                                        <VisualBrush Visual="{Binding ElementName=Container}"/>
                                    </Grid.OpacityMask>

                                    <Grid.RowDefinitions>
                                        <!--Title bar-->
                                        <RowDefinition Height="{Binding TitleHeightGridLength, FallbackValue=42}"/>
                                        <!--window content, *은 나머지 공간을 차지하겠다는 말이다.-->
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    
                                    <!--Title Bar-->
                                    <Grid Grid.Column="0" Panel.ZIndex="1">
                                        <Grid.ColumnDefinitions>
                                            <!--icon-->
                                            <ColumnDefinition Width="Auto"/>
                                            <!--title-->
                                            <ColumnDefinition Width="*"/>
                                            <!--windows buttons-->
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <!--icon-->
                                        <!--기본값으로 두면 border가 있는 모양이 되므로 window chrome을 쓸 때는 customize를 해준다.-->
                                        <!--IsHitTestVisibleInChrome은 마우스를 올렸을 때 interactive하게 반응한다.-->
                                        <!--padding과 visible이 정상 작동됨이 확인되면 buttons.xaml로 옮긴다-->
                                        <!--<Button Padding="8" Style="{StaticResource Hoverless}" WindowChrome.IsHitTestVisibleInChrome="True" Command="{Binding MenuCommand}">-->
                                        <!--그리고 거기서 지정한 이름 SystemIconButton을 넣어준다-->
                                        <Button Style="{StaticResource SystemIconButton}"  Command="{Binding MenuCommand}">
                                            <Image Source="/Images/Logo/logo-small.png"/>
                                        </Button>
                                        
                                        <!--Title-->
                                        <!--viewbox는 border 안에 꽉 차게 만들 때 사용한다.-->
                                        
                                        <!--<Viewbox Grid.Column="1" Margin="0">는 정확한 센터가 아니다.
                                        왼쪽엔 스마일 아이콘 하나, 오른쪽엔 아이콘 3개가 차지하고 있기 때문이다.-->
                                        <Viewbox Grid.Column="0" Grid.ColumnSpan="3" Margin="5">
                                            <StackPanel>
                                                <TextBlock FontFamily="{StaticResource LatoBold}" FontSize="{StaticResource FontSizeRegular}" Margin="0,0,0,-5">
                                                    <!--이미지로 집어넣어도 되지만 커스텀하는 방법을 알려주기 위해 작성-->
                                                    <!--코드를 서로 붙여 써야 blank가 생기지 않는다.-->
                                                    <Run Text="W" Foreground="{StaticResource WordOrangeBrush}"/><Run Text="O" Foreground="{StaticResource WordBlueBrush}"/><Run Text="R" Foreground="{StaticResource WordRedBrush}"/><Run Text="D" Foreground="{StaticResource WordGreenBrush}"/>
                                                </TextBlock >
                                                <TextBlock Text="by fasetto" Foreground="{StaticResource ForegroundDarkBrush}" FontSize="{StaticResource FontSizeSmall}" TextAlignment="center"/>
                                            </StackPanel>   
                                        </Viewbox>
                                        
                                        <!--Window Buttons-->
                                        <StackPanel Grid.Column="2" Orientation="Horizontal">
                                            <!--command를 넣어 각 버튼이 기능하도록 한다.-->
                                            <Button Command="{Binding MinimizeCommand}" Style="{StaticResource WindowContorlButton}" Content="_"/>
                                            <Button Command="{Binding MaximizeCommand}" Style="{StaticResource WindowContorlButton}" Content="[ ]"/>
                                            <Button Command="{Binding CloseCommand}" Style="{StaticResource WindowCloseButton}" Content="X"/>
                                        </StackPanel>
                                    </Grid>
                                    
                                    
                                    <!--Page Content-->
                                    <Border Grid.Row="1" Padding="{Binding InnerContentPadding}" >
                                            <ContentPresenter Content="{TemplateBinding Content}"/>
                                    </Border>
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <!--창을 resizing 하려면 WindowChrome을 쓴다.-->
    <WindowChrome.WindowChrome>
        <!--f12를 누르면 해당 property 내용을 볼 수 있다.-->
        <WindowChrome 
            ResizeBorderThickness="{Binding ResizeBorderThickness}"
            CaptionHeight="{Binding TitleHeight}"
            GlassFrameThickness="100"
            />
        <!--glass frame은 윈도우 7처럼 사각형에 테두리 지는 것을 말한다. 이걸 없애기 위해 0으로 설정한다. -->
    </WindowChrome.WindowChrome>

    <Grid Background="{StaticResource ForegroundLightBrush}">
        <!--CurrentPage 라는 걸 Binding 한다고 설정해두고 WindowViewModel에 추가한다.-->
        <!--여기서 content는 uri나 page 같은 내용이 들어가야 한다.-->
        <Frame x:Name="MainFrame" Content="{Binding CurrentPage, Converter={local:ApplicationPageValueConverter}}"/>
        <!--frame이 main content이고 CurrentPage를 찾는다. 이건 WindowViewModel에 정의가 되어있는데 Login으로 set 되어 있다.  -->
        <!--login은 Application PageValueConverter를 통해 적합한 페이지를 찾고 return 한다.-->
        <!--그럼 Window에 login page가 표현된다.-->

    </Grid>
    
</Window>
